// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator jsonSchema {
  provider = "prisma-json-schema-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  password  String

  orders Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Restaurant {
  id    Int     @id @default(autoincrement())
  name String
  address String //@db.Text
  type String?

  products Product[]
  orders Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id    Int     @id @default(autoincrement())
  date DateTime @default(now())

  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  restaurantId Int

  delivery Delivery?
  products OrderOfProducts[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id    Int     @id @default(autoincrement())
  name String
  price Float
  description String? //@db.Text

   restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
   restaurantId Int

   orders OrderOfProducts[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderOfProducts {
   id    Int     @id @default(autoincrement())
   price Float

   order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
   orderId Int

   product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
   productId Int

   assignedAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model Delivery {
  id    Int     @id @default(autoincrement())
  deliveryDate DateTime?
  status String @default("IN_PROGRESS")
  address String //@db.Text

  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId Int @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//enum DeliveryStatus {
//    IN_PROGRESS
//    DELIVERED
//    CANCELED
//}
